// Import your custom variables
@import '../../styles/app-variables';
// Then import ionic after. Ionic will use your variables instead of its own.
@import '{seba:ionic-sass}/scss/ionic';

// ---------------------------------------------------------------------------------

.icon-col {
  width: 40px;
  padding-top: 10px;
  text-align: center;
}

.icon-col i {
  font-size: 2em;
}

.event-type-select {
  max-width: 300px;
}

.editor-modal {
  position: relative;
  width: 100%;
  height: 100%;
}

.editor-form {
  margin-top: 10px;
}

.editor-form .row {
  margin-bottom: 15px;
}

.editor-form .editor-input-group {
  display: inline-block;
  position: relative;
  width: 100%;
  max-width: 300px;
}

.editor-form .editor-input {
  background: none;
  padding: 5px 10px 0px 5px;
  display: block;
  width: 100%;
  border: none;
  border-bottom: 1px solid #bbbbbb;
}

input.editor-input:valid {
  border-bottom: 1px solid #eeeeee;
}

.editor-form .editor-input:focus {
  outline: none;
}

.editor-form .editor-input-bar {
  position: relative;
  display: block;
  width: 100%;
}

.editor-form .editor-input-bar:before,
.editor-form .editor-input-bar:after {
  content: '';
  height: 2px;
  width: 0px;
  bottom: 0px;
  position: absolute;
  background: $positive;
  transition: 0.2s ease all;
}

.editor-form .editor-input-bar:after {
  left: 0%;
}

input:focus ~ .editor-input-bar:after {
  width: 100%;
}

.editor-form .event-name-input {
  width: 100%;
  max-width: 800px;

  input {
    font-size: 1.8em;
    font-weight: bold;
    padding: 5px 10px 10px 10px;
    overflow: hidden;
    text-overflow: ellipsis;
  }
}

.editor-form .event-password-input {
  float: right;
  text-align: right;
  font-style: italic;
  width: 50%;
  max-width: 250px;

  .editor-input-group {
    width: 90%;
    display: inline-block;

    input {
      font-style: italic;
    }
  }
}

.editor-form .editor-date-input {
  max-width: 45%;
  min-width: 100px;
}

.editor-dates {
  width: 100%;
}

.editor-open-times .editor-dates {
  margin-bottom: 20px;
}

.editor-form .editor-program-input {
  width: 100%;
  background: none;
  border: none;
  border-bottom: 1px solid #bbbbbb;
  transition: 0.2s ease all;
}

.editor-form .editor-program-input:focus {
  border: 1px solid #bbbbbb;
}

.editor-form .editor-program-input:valid {
  border: none;
}

.editor-form label {
  display: block;
  font-size: 0.8em;
  text-transform: uppercase;
  font-weight: bold;
  margin-bottom: 0;
}

.editor-form .editor-input-group ~ label {
  margin-top: 20px;
}

.editor-questions {
  .editor-input-group.number {
    width: 50px;
  }

}

.editor-questions.ng-hide-add,
.editor-questions.ng-hide-remove {
  transition: all linear 0.5s;
}

.editor-questions.ng-hide {
  opacity: 0;
}

.editor-questions ul {
  display: block;
  list-style-type: disc;
  margin-bottom: 1em;
  margin-left: 0;
  margin-right: 0;
  padding-left: 40px;
}

.editor-module-name {
  font-size: 1.25em;
  font-weight: bold;
  cursor: pointer;

  span {
    font-weight: normal;
  }
}

.editor-step {
  border: 1px solid #bbbbbb;
  padding: 5px;
  padding-left: 10px;

  .step-delete {
    border-radius: 50%;
    background-color: transparent;
    color: transparent;
    border: 3px solid transparent;
    line-height: 19px;
    font-weight: bold;
    display: inline-block;
    float: left;
    width: 25px;
    height: 25px;
    margin-left: -35px;
    text-align: center;
  }

  .step-delete:hover {
    background-color: $balanced;
    color: $stable;
    border: 3px solid $balanced;
    cursor: pointer;
  }

  .step-add {
    border-radius: 50%;
    background-color: transparent;
    color: transparent;
    border: 3px solid transparent;
    line-height: 12px;
    font-size: 12px;
    display: inline-block;
    float: left;
    width: 15px;
    height: 15px;
    margin-left: -30px;
    margin-top: 2px;
    text-align: center;
  }

  .step-add:hover, .step-add.last {
    background-color: $energized;
    color: $stable;
    border: 3px solid $energized;
    cursor: pointer;
  }

  .step-add.last {
    line-height: 19px;
    width: 25px;
    height: 25px;
    margin-left: -35px;
  }

  .question {
    width: 40%;
    cursor: pointer;
  }

  .question-open {
    color: $positive;
  }

}

.editor-steps {
  padding: 10px;
}

.editor-steps.ng-hide-add,
.editor-steps.ng-hide-remove {
  transition: all linear 0.5s;
}

.editor-steps.ng-hide {
  opacity: 0;
}

.editor-modal-container {
  padding: 10px;
  margin-bottom: 50px;
}

.editor-module {
  //border: 1px solid #bbbbbb;
  padding: 10px;
  padding-left: 20px;
}

.editor-question {
  position: absolute;
  background-color: white;
  border: 1px solid #bbbbbb;
  border-radius: 10px;

  .question {
    font-weight: bold;

    .editor-input-group {
      width: 100%;
      max-width: 800px;
      input {
        text-overflow: ellipsis;
      }
    }
  }
  .type {
    font-style: italic;
    font-size: 0.9em;
  }
  .property {
    font-size: 0.9em;
    cursor: help;
    float:right;
  }
}

@media (min-width: 768px) {
  .editor-question {
    width: 50%;
    max-width: 600px;
    left: 50%;
    margin-top: -50px !important;
    padding: 10px 20px 20px 20px;
  }
  .editor-question::after {
    content: " ";
    position: absolute;
    top: 0;
    right: 100%; /* To the left of the tooltip */
    margin-top: 25px;
    border-width: 15px;
    border-style: solid;
    border-color: transparent #AAAAAA transparent transparent;

  }
}

@media (max-width: 767px) {
  .editor-question {
    width: 90%;
    left: 5%;
    margin-top: 20px !important;
    padding: 10px 20px 20px 20px;
  }

  .editor-question::after {
    content: " ";
    position: absolute;
    bottom: 100%; /* At the top of the tooltip */
    left: 50%;
    margin-left: -15px;
    border-width: 15px;
    border-style: solid;
    border-color: transparent transparent #AAAAAA transparent;
  }
}

.action-sheet .button {
  color: $balanced !important; // override ionic
}

.caret {
  display: inline-block;
  width: 0;
  height: 0;
  position: relative;
  top: -3px;
  margin-left: 5px;
  vertical-align: middle;
  border-top: 7px solid transparent;
  border-right: 0 solid transparent;
  border-left: 7px solid $dark;
  border-bottom: 7px solid transparent;
  overflow: hidden;
  transition: 200ms ease;
  cursor: pointer;
}

.caret.open {
  transform: rotate(90deg);
  border-width: 7px 0px 7px 7px;
}

/* -------------------- Vertical Steps https://codepen.io/luisleguisamo/pen/obXapK -------------------- */
.vertical-steps {
  padding-left: 10px;

  .list-group-item {
    border: none;
    border-left: 5px solid $royal;
    box-sizing: border-box;
    border-radius: 0;
    padding-left: 20px;
    padding-right: 0px;
    padding-bottom: 20px;
    padding-top: 0px;
  }

  .list-group-item.question {
    counter-increment: question-counter;
  }

  .list-group-item:last-child {
    border-left: 5px solid transparent;
    padding-bottom: 0;
  }

  .list-group-item::before {
    border-radius: 50%;

    background-color: $stable;
    color: $royal;
    border: 3px solid $royal;
    line-height: 19px;

    font-weight: bold;
    display: inline-block;
    float: left;
    height: 25px;
    margin-left: -35px;
    text-align: center;
    width: 25px;
  }

  .list-group-item.question {
    padding-bottom: 5px;
  }

  .list-group-item.question::before {
    content: counter(question-counter);
  }

  .list-group-item.question:hover::before, .list-group-item.question.open::before {
    background-color: $royal;
    color: white;
  }

  .list-group-item.add {
    margin-top: -10px;
    height: 50px;
  }

  .list-group-item.add:last-child::before {
    content: '+';
    font-size: 1.5em;
    border: none;
    line-height: 21px;
    background-color: $energized;
    color: white;
    cursor: pointer;
  }

  .list-group-item.add:hover::before {
    content: '+';
    font-size: 1.5em;
    border: none;
    line-height: 21px;
    background-color: $energized;
    color: white;
    cursor: pointer;
  }

  .list-group-item.add:hover div {
    border: 1px dashed #bbbbbb;
    cursor: pointer;
    position: relative;
    left: 20px;
    width: 90%;
    height: 100%;
  }

  .list-group-item > div {
    display: block;
    overflow: hidden;
    padding-top: 2px;
  }
}

